name: Release Charts

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.4.0

    - name: Update kube config
      run: aws eks update-kubeconfig --name HL7-dev-eks

    - name: deployment
      run: kubectl apply -f deployment.yaml

    - name: deployment
      run: kubectl apply -f kafka.yaml

    - name: deployment
      run: kubectl apply -f gms.yaml
      
    - name: deployment
      run: kubectl apply -f elasticsearch.yaml

    - name: deployment
      run: kubectl apply -f postgresql.yaml
      
    - name: deployment
      run: kubectl apply -f datahub.yaml
      
      
    #- name: Add Helm repos
     # run: |
       # helm repo add elasticsearch https://helm.elastic.co
       # helm repo add neo4j https://helm.neo4j.com/neo4j
        #helm repo add mysql https://charts.bitnami.com/bitnami
        #helm repo add cp-helm-charts https://confluentinc.github.io/cp-helm-charts
        #helm repo add kafka https://charts.bitnami.com/bitnami
          
    
    #- name: Run chart-releaser
      #uses: helm/chart-releaser-action@v1.2.1
      #with:
        #charts_repo_url: https://helm.datahubproject.io/

      #env:
        #CR_TOKEN: "${{ secrets.AWS_GITHUB_TOKEN }}"
         
    #- name: Check if secrets exist
      #id: check_secrets
      #run: |
       # postgresql_secret_exist=$(kubectl get secret postgresql-secrets -o name --ignore-not-found)
        #echo "::set-output name=postgresql_secret_exist::$postgresql_secret_exist"

    #- name: Create PostgreSQL secret if it doesn't exist
      #if: steps.check_secrets.outputs.postgresql_secret_exist == ''
      #run: |
        #kubectl create secret generic postgresql-secrets --from-literal=postgresql-password=datahub

    #- name: Add datahub helm repo 
      #run: |
       # helm repo add datahub https://helm.datahubproject.io/
        
    #- name: install datahub helm repo 
      #run: |   
       # helm upgrade --install --force prerequisites datahub/datahub-prerequisites --values ./charts/prerequisites/values.yaml*/
        

        
